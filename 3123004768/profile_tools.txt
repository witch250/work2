Timer unit: 1e-06 s

Total time: 1.5806 s
File: main.py
Function: Levenshtein1 at line 38

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    38                                           @profile
    39                                           def Levenshtein1(txt1,txt2):
    40         1          0.7      0.7      0.0      if (txt1=='' and txt2!='') or (txt2=='' and txt1!=''):
    41                                                   return 0
    42         1          0.3      0.3      0.0      try:
    43         1     837692.7 837692.7     53.0          s1=jieba.analyse.extract_tags(txt1, topK=30)
    44         1     265689.3 265689.3     16.8          s2=jieba.analyse.extract_tags(txt2, topK=30)
    45                                                   #list仅位置不同时会得到完全不同，我猜可以这么改
    46         1          9.3      9.3      0.0          s1.sort()
    47         1          2.3      2.3      0.0          s2.sort()
    48                                                   #print(s1)
    49                                                   #print(s2)
    50                                                   #比较list,返回小数
    51         1     477201.9 477201.9     30.2          return Levenshtein.ratio(s1,s2)*0.5+Levenshtein.ratio(jieba.analyse.extract_tags(txt1, topK=20),jieba.analyse.extract_tags(txt2, topK=20))*0.5
    52                                               except MemoryError:
    53                                                   raise MemoryError("内存溢出")

Total time: 0.470275 s
File: main.py
Function: Jaccard1 at line 56

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    56                                           @profile
    57                                           def Jaccard1(txt1,txt2):
    58         1          1.0      1.0      0.0      if (txt1=='' and txt2!='') or (txt2=='' and txt1!=''):
    59                                                   return 0
    60         1          0.4      0.4      0.0      try:
    61         1     202371.5 202371.5     43.0          s1=jieba.analyse.extract_tags(txt1, topK=30)
    62         1     267884.5 267884.5     57.0          s2=jieba.analyse.extract_tags(txt2, topK=30)
    63         1          5.6      5.6      0.0          s1=set(s1)
    64         1          1.5      1.5      0.0          s2=set(s2)
    65         1          4.3      4.3      0.0          num1=len(s1&s2)
    66         1          4.3      4.3      0.0          num2=len(s1|s2)
    67         1          0.6      0.6      0.0          if num2==0:
    68                                                       return 1
    69         1          1.6      1.6      0.0          return num1/num2
    70                                               except MemoryError:
    71                                                   raise MemoryError("内存溢出")